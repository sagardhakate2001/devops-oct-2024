apiVersion: v1
kind: Service
metadata:
  name: icemptyvol-svc
spec:
  selector:
    app: icemptyvol-app
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 5000
    nodePort: 30008
  type: NodePort
---

apiVersion: apps/v1
# Deployment is k8 artifact or k8 object
kind: Deployment
metadata:
  name: icemptyvol-app-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: icemptyvol-app
    spec:
      containers:
      - name: second-app-container
        image: cbagade/kube-data-icemptyvol:v5
        ports:
          - containerPort: 5000
        # after setting vol at pod, we need to mount that on container on specific path
        # this application is already have data folder
        # so that text file will be available onto pod now, over volume
        volumeMounts:
        - mountPath: /app/userchanges
          # name of volume set on pod, there might be multiple volumes, so need names
          name: userchanges-volume
      # volumes are at container level on pods
      volumes:
      - name: userchanges-volume
        emptyDir: {}          
  selector:
    matchLabels:
      app: icemptyvol-app


# docker build -t cbagade/kube-data-icemptyvol:v5 .
# docker push cbagade/kube-data-icemptyvol:v5
# kubectl apply -f app_deployment.yaml
# -- ensure pods are running
# kubectl get pods -w 
# curl 'http://localhost:30008/api/v1/fruits'

# post data (existing fruits plus appending additional fruits)
# curl --location 'http://localhost:30008/api/v1/fruits' \
#  --header 'Content-Type: application/json' \
# --data '{"fruitName":"Apple","from":"Tamilnadu","nutrients":"Vitamin B, Vitamin K","price":"200.50","organic":true,"description":"An avocado is a bright green fruit with a large pit and dark leathery skin. They'\''re also known as alligator pears or butter fruit. Avocados are a favorite of the produce section. They'\''re the go-to ingredient for guacamole dips."}'


# Verify the changes (additional fruits along with original ones)
# curl 'http://localhost:30008/api/v1/fruits'

# GET  app_2/api/v1/fruits/error change port to 30008, this will restart container,
# This action will put container in error state and restart (pod is not restarted)
# curl 'http://localhost:30008/api/v1/fruits/error'
# Observe container restart
# kubectl get pods -w



# GET app_2/api/v1/fruits change port to 30008
# curl 'http://localhost:30008/api/v1/fruits'
# changes are available, so emptyDir can survice container restart


# kubectl get pod
# kubectl delete pod <pod_name>
# kubectl delete pod  icemptyvol-app-deployment-748dbbcc4f-w9ctx
# wait for pod  deletion and new pod to come up
# kubectl get pods

# GET app_2/api/v1/fruits change port to 30008
# curl 'http://localhost:30008/api/v1/fruits'
# changes are lost, so emptyDir can't survive pod restart but can survive container restart
# kubectl delete -f app_deployment.yaml
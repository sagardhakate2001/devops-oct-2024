apiVersion: v1
kind: Service
metadata:
  name: hpa-service
spec:
  selector:
    app: hpa-app
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 5000
    nodePort: 30008
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hpa-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: hpa-app
    spec:
      containers:
      - name: second-app-container
        image: cbagade/pyhpa-setup:v1
        ports:
          - containerPort: 5000         
        resources:
          limits:
            memory: 500Mi
            cpu: 100m
          requests:
            memory: 250Mi
            cpu: 80m        
  selector:
    matchLabels:
      app: hpa-app
      

# docker build -t cbagade/pyhpa-setup:v1 .
# docker push cbagade/pyhpa-setup:v1
# kubectl apply -f metrics-server/components.yaml
# kubectl get pods -n kube-system (metrics server pod should be running)
# kubectl apply -f app_deployment.yaml
# kubectl get pods -w (in 1 window)
# curl http://localhost:30008/greetings  -> ensure this is working fine
# kubectl create -f hpa.yaml
# kubectl get hpa -w (in 2 window)
# ensure Targets column for above command display some value and shouldn't be unknown, like cpu: 1%/15% 
# Lets put some load
# In 3 window
# while true; do wget -q -O- http://localhost:30008/greetings; done 
# after cpu > 15% pods will be created
# observer both hpa and pods
# now do ctrl C in window where while loop is running
# 
# kubectl delete -f hpa.yaml -f app_deployment.yaml